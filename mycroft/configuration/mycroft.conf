{
  // Definition and documentation of all variables used by mycroft-core.
  //
  // Settings seen here are considered DEFAULT.  Settings can also be
  // overridden at the REMOTE level (set by the user via
  // https://home.mycroft.ai), at the SYSTEM level (typically in the file
  // '/etc/mycroft/mycroft.conf'), or at the USER level (typically in the
  // file '~/.mycroft/mycroft.conf').
  //
  // The load order of settings is:
  //   DEFAULT
  //   REMOTE
  //   SYSTEM
  //   USER
  //
  // The Override: comments below indicates where these settings are generally
  // set outside of this file.  The load order is always followed, so an
  // individual systems can still apply changes at the SYSTEM or USER levels.

  // Language used for speech-to-text and text-to-speech.
  // Code is a BCP-47 identifier (https://tools.ietf.org/html/bcp47), lowercased
  // TODO: save unmodified, lowercase upon demand


  // lang is the internal language bellow
  // used for backwards compat only
  "lang": "en-us",

  "language": {

    // language used by skills
    // NOTE: if not set uses "lang" from above
    // "internal": "en-us",

    // language used by TTS

    // NOTE: if not set uses "lang" from above
    // "user": "en-us",

    // engine used to detect text language
    // options: cld2 / cld3 / google / amazon / fastlang / detect
    "detection_module": "fastlang",

    // engine used to translate text
    // options: google / amazon / apertium / libretranslate
    "translation_module": "google",

    // boost predictions for output language
    "boost": false
  },

  // this field contains api keys for several services
  // it is meant mainly for end users to safely input their keys
  // NOTE: if a key is set here it will be used instead of key defined in stt/tts fields
  // Override: USER
  "keys": {

        // wolfram alpha skill
        // TODO update skill!
        // "wolfram": ""

        // amazon translate
        //"amazon": {
        //    "key_id": "",
        //    "secret_key": "",
        //    "region": "us-east-1"
        //},

        // google_cloud STT
        //"google_cloud": {
        //  "type": "service_account",
        //  "project_id": "",
        //  "private_key_id": "",
        //  "private_key": "",
        //  "client_email": "",
        //  "client_id": "",
        //  "auth_uri": "https://accounts.google.com/o/oauth2/auth",
        //  "token_uri": "https://oauth2.googleapis.com/token",
        //  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
        //  "client_x509_cert_url": ""
        // },

        // polly TTS
        // TODO pr for polly needs to be updated!
        //"polly": {
        //    "key_id": "",
        //    "secret_key": "",
        //    "region": "us-east-1"
        //},

        // watson TTS
        // "watson": {"key": ""}

        // yandex tts / sty
        // "yandex": {"key": ""}

        // bing tts / stt
        //"bing": {"key": ""}

        // Wit STT
        // "wit": {"key": ""}

        // IBM STT
        // "ibm": {"client_id": "", "client_key": ""}

        // Houndify STT
        // "houndify": {"client_id": "", "client_key": ""}

        // GoVivace TT
        // "govivace": {"key": ""}
  },

  "text_parsers": {
    // add name of a module here to stop it from loading
    "blacklist": []
  },

  "audio_parsers": {
    // add name of a module here to stop it from loading
    "blacklist": ["gender"]
  },

  // Measurement units, either 'metric' or 'english'
  // Override: REMOTE
  "system_unit": "metric",

  // Time format, either 'half' (e.g. "11:37 pm") or 'full' (e.g. "23:37")
  // Override: REMOTE
  "time_format": "half",

  // Date format, either 'MDY' (e.g. "11-29-1978") or 'DMY' (e.g. "29-11-1978")
  // Override: REMOTE
  "date_format": "MDY",

  // Whether to opt in to data collection
  // Override: REMOTE
  "opt_in": false,

  // Play a beep when system begins to listen?
  "confirm_listening": true,

  // File locations of sounds to play for system events
  "sounds": {
    "start_listening": "snd/start_listening.wav",
    "end_listening": "snd/end_listening.wav",
    "acknowledge": "snd/acknowledge.mp3"
  },

  // Mechanism used to play WAV audio files
  // Override: SYSTEM
  "play_wav_cmdline": "paplay %1 --stream-name=mycroft-voice",

  // Mechanism used to play MP3 audio files
  // Override: SYSTEM
  "play_mp3_cmdline": "mpg123 %1",

  // Mechanism used to play OGG audio files
  // Override: SYSTEM
  "play_ogg_cmdline": "ogg123 -q %1",

  // Location where the system resides
  // NOTE: Although this is set here, an Enclosure can override the value.
  //       For example a mycroft-core running in a car could use the GPS.
  // Override: REMOTE
  "location": {
    "city": {
      "code": "Lawrence",
      "name": "Lawrence",
      "state": {
        "code": "KS",
        "name": "Kansas",
        "country": {
          "code": "US",
          "name": "United States"
        }
      }
    },
    "coordinate": {
      "latitude": 38.971669,
      "longitude": -95.23525
    },
    "timezone": {
      "code": "America/Chicago",
      "name": "Central Standard Time",
      "dstOffset": 3600000,
      "offset": -21600000
    }
  },

  // TODO XDG compliance
  "data_dir": "~/mycroft",

  // General skill values
  "skills": {
    // Directory to look for skills
    "directory": "~/mycroft/skills",

    // blacklisted skills to not load
    // NB: This is the basename() of the directory where the skill lives, so if
    // the skill you want to blacklist is in /opt/mycroft/skills/mycroft-alarm.mycroftai/
    // then you should write "mycroft-alarm.mycroftai" below.
    "blacklisted_skills": [],

    // priority skills to be loaded first
    "priority_skills": [],

    /////// Below starts appstore configuration

    // appstore functionality can be completely disabled with this flag
    "disable_osm": false,

    // time between appstore skill list synchronizations, in hours
    // NOTE runs on a timer (background), set to 0 to disable
    "appstore_sync_interval": 6,

    // if enabled default skills are installed
    // NOTE runs on startup (blocking)
    "auto_update": false,

    // time between background checks for skill updates, in hours
    // NOTES: runs on a timer (background)
    //        set to 0 to disable
    //        depends on "auto_update" flag being enabled
    //        only default/essential skills are updated
    //        user installed skills are never updated automatically
    "auto_update_interval": 24,

    // github authentication token for the neon skills store
    // this is optional and overrides the OSM config file
    // default token ensures all installs can access default skills
    "neon_token": "1a23bd09b96dbf6644b386b2670c60ade31a1a96",

    // list of essential skills
    // will be installed automatically on launch once internet is available
    "install_essential": true,
    // can be an url, list of urls, or list of search terms for osm
    // RECOMMENDED: list of skill_urls, version pinned
    "essential_skills": [],

    // list of default skills
    // will be installed automatically after alternative skills
    "install_default": false,
    // can be an url, list of urls, or list of search terms for osm
    // RECOMMENDED: url to txt file, one skill_id/skill_url per line
    "default_skills": "https://raw.githubusercontent.com/NeonGeckoCom/neon-skills-submodules/master/DEFAULT-SKILLS"

  },

  // Address of the REMOTE server
  "server": {
    "url": "https://api.mycroft.ai",
    "version": "v1",
    "update": true,
    "metrics": false,
    "disabled": true
  },

  // The mycroft-core messagebus websocket
  "websocket": {
    "host": "0.0.0.0",
    "port": 8181,
    "route": "/core",
    "ssl": false,
    "allow_self_signed": false,
    "ssl_cert": "~/.mycroft/certs/messagebus.crt",
    "ssl_key": "~/.mycroft/certs/messagebus.key"
  },

  // The GUI messagebus websocket.  Once port is created per connected GUI
  "gui_websocket": {
        "host": "0.0.0.0",
        "base_port": 18181,
        "route": "/gui",
        "ssl": false
  },

  // Settings used by the wake-up-word listener
  // Override: REMOTE
  "listener": {
    "sample_rate": 16000,
    // Set 'record_wake_words' to save a copy of wake word triggers
    // as .wav files under: /tmp/mycroft_wake_words
    "record_wake_words": false,
    // Set 'save_utterances' to save each sentence sent to STT -- by default
    // they are only kept briefly in-memory.  This can be useful for for
    // debugging or other custom purposes.  Recordings are saved
    // under: /tmp/mycroft_utterance<TIMESTAMP>.wav
    "save_utterances": false,
    "wake_word_upload": {
      "disable": false,
      "url": "https://training.mycroft.ai/precise/upload"
    },

    "wake_word_enabled": false,

    // Override as SYSTEM or USER to select a specific microphone input instead of
    // the PortAudio default input.
    //   "device_name": "somename",  // can be regex pattern or substring
    //       or
    //   "device_index": 12,

    // Stop listing to the microphone during playback to prevent accidental triggering
    // This is enabled by default, but instances with good microphone noise cancellation
    // can disable this to listen all the time, allowing 'barge in' functionality.
    "mute_during_output" : true,

    // How much (if at all) to 'duck' the speaker output during listening.  A
    // setting of 0.0 will not duck at all.  A 1.0 will completely mute output
    // while in a listening state.  Values in between will lower the volume
    // partially (this is optional behavior, depending on the enclosure).
    "duck_while_listening" : 0.3,

    // In milliseconds
    "phoneme_duration": 120,
    "multiplier": 1.0,
    "energy_ratio": 1.5,

    // DEPRECATED
    // NOTE: official nap time skill checks for this for .dialog
    "wake_word": "hey neon",

    // stand up word it to get out of sleep mode "hey mycroft, wake up"
    "stand_up_word": "wake up"
  },

  // Settings used for any precise wake words
  "precise": {
    "dist_url": "https://github.com/MycroftAI/precise-data/raw/dist/{arch}/latest-dev",
    "model_url": "https://raw.githubusercontent.com/MycroftAI/precise-data/models/{wake_word}.tar.gz"
  },

  // Hotword configurations
  "hotwords": {
     "hey neon": {
        "module": "precise",
        "phonemes": "HH EY . N IY AA N .",
        "threshold": 1e-90,
        "lang": "en-us",
        // listen is false by default
        "listen": true,
        // sounds are now set individually
        // no sound played by default
        "sound": "snd/start_listening.wav",
        "local_model_file": "hey-neon.pb"
        },
    "hey mycroft": {
        "module": "precise",
        "phonemes": "HH EY . M AY K R AO F T",
        "threshold": 1e-90,
        "lang": "en-us",
        "listen": true,
        "active": false
        },
    "thank you": {
          "module": "pocketsphinx",
          "phonemes": "TH AE NG K . Y UW",
          "sound": "snd/acknowledge.mp3",
          "threshold": 1e-18,
          // set active to true (default) if you want to test
          "active": false
        },
    "fuck you": {
          "module": "pocketsphinx",
          "phonemes": "F AH K . Y UW",
          // hearing this hot word will emit this utterance
          "utterance": "say please don't be rude",
          //"sound": "full_path/to/error.mp3",
          // NOTE this threshold is not tuned, triggers too much
          "threshold": 1e-18,
          // set active to true (default) if you want to test
          "active": false
        },
    "wake up": {
        // this one is used as stand-up word, configured under "listener"
        // it will be ignored, no need to set active = false
        "module": "pocketsphinx",
        "phonemes": "W EY K . AH P",
        "threshold": 1e-20,
        "lang": "en-us"
        }
  },

  // Level of logs to store, one of  "CRITICAL", "ERROR", "WARNING", "INFO", "DEBUG"
  // NOTE: This configuration setting is special and can only be changed in the
  // SYSTEM or USER configuration file, it will not be read if defined in the
  // DEFAULT (here) or in the REMOTE mycroft config.
  // If not defined, the default log level is INFO.
  //"log_level": "INFO",

  // Messagebus types that will NOT be output to logs
  "ignore_logs": ["enclosure.mouth.viseme", "enclosure.mouth.display"],

  // Settings related to remote sessions
  // Overrride: none
  "session": {
    // Time To Live, in seconds
    "ttl": 180
  },

  // Speech to Text parameters
  // Override: REMOTE
  "stt": {
    // Engine.  Options: "mycroft", "google", "wit", "ibm", "kaldi", "bing",
    //                   "houndify", "deepspeech_server", "govivace", "yandex"
    "module": "deepspeech_stream_local",
    "deepspeech_stream_local": {
        "model_path": "/home/d_mcknight/PycharmProjects/NeonCore/deepspeech-0.8.1-models.pbmm",
        "scorer_path": "/home/d_mcknight/PycharmProjects/NeonCore/deepspeech-0.8.1-models.scorer"
    }
    // "deepspeech_server": {
    //   "uri": "http://localhost:8080/stt"
    // },
    // "kaldi": {
    //   "uri": "http://localhost:8080/client/dynamic/recognize"
    // },
    //"govivace": {
    //   "uri": "https://services.govivace.com:49149/telephony",
    //   "credential": {
    //      "token": "xxxxx"
    //      }
    //}
  },

  // Text to Speech parameters
  // Override: REMOTE
  "tts": {
    // Engine.  Options: "mimic", "google", "marytts", "fatts", "espeak", "spdsay", "responsive_voice", "yandex"
    "pulse_duck": false,
    "module": "polly",
    "polly": {
        "voice": "Matthew",
        "region": "us-east-1",
        "key_id": "",
        "secret_key": ""
    },
    "mimic": {
      "voice": "ap"
    },
    "mimic2": {
      "lang": "en-us",
      "url": "https://mimic-api.mycroft.ai/synthesize?text=",
      "preloaded_cache": "/opt/mycroft/preloaded_cache/Mimic2"
    },
    "espeak": {
      "lang": "english-us",
      "voice": "m1"
    }
  },

  "padatious": {
    "intent_cache": "~/.mycroft/intent_cache",
    "train_delay": 4
  },

  "Audio": {
    "backends": {
      "local": {
        "type": "simple",
        "active": true
      },
      "vlc": {
        "type": "vlc",
        "active": true,
        "duck": true
      }
    },
    "default-backend": "vlc"
  },

  "Display": {
    "backends": {
      "opencv": {
        "type": "opencv",
        "active": true
      }
    },
    "default-backend": "opencv"
  },

  "debug": false
}
