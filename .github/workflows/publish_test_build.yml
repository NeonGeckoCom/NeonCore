# This workflow will generate a distribution and upload it to PyPI

name: Publish Alpha Build
on:
  push:
    branches:
      - dev
    paths-ignore:
      - 'version.py'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/neon_skills

jobs:
  increment_version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install Build Tools
        run: |
          python -m pip install build wheel
      - name: Increment Version
        run: |
          VER=$(python setup.py --version)
          python version_bump.py
      - name: Push Version Change
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Increment Version
  tag_alpha_release:
    runs-on: ubuntu-latest
    needs: increment_version
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Get Version
        id: version
        run: |
          VERSION=$(python setup.py --version)
          echo ::set-output name=version::${VERSION}
      - name: Create Pre-release
        uses: ncipollo/release-action@v1
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          tag: ${{steps.version.outputs.version}}
          prerelease: true
  build_and_publish_docker:
    runs-on: ubuntu-latest
    needs: increment_version
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Get Version
        id: version
        run: |
          VERSION=$(sed "s/a/-a./" <<< $(python setup.py --version))
          echo ::set-output name=version::${VERSION}

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for base Docker
        id: base_meta
        uses: docker/metadata-action@v2
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.version.outputs.version }}
            type=ref,event=branch
      - name: Build and push base Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.base_meta.outputs.tags }}
          labels: ${{ steps.base_meta.outputs.labels }}
          target: base

      - name: Extract metadata for default_skills Docker
        id: default_skills_meta
        uses: docker/metadata-action@v2
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-default_skills
          tags: |
            type=semver,pattern={{version}},value=${{ steps.version.outputs.version }}
            type=ref,event=branch
      - name: Build and push default_skills Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.default_skills_meta.outputs.tags }}
          labels: ${{ steps.default_skills_meta.outputs.labels }}
          target: default_skills