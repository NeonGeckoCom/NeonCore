# This workflow will run unit tests

name: Test Installation
on:
  push:
  workflow_dispatch:

jobs:
  remote:
    strategy:
      matrix:
        python-version: [ 3.6, 3.8 ]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup Core
        run: |
          bash test/setup_remote.sh ${NEON_TOKEN}
        env:
          NEON_TOKEN: ${{secrets.neon_token}}
      - name: Test Core Setup
        run: |
          . test/.venv/bin/activate
          pip install pytest pytest-timeout
          pytest test/test_setup_remote.py --junitxml=tests/remote-setup-results.xml
          pytest test/test_run_modules.py -o log_cli=true --junitxml=tests/remote-modules-results.xml
          pytest test/test_setup_first_run.py -o log_cli=true --junitxml=tests/remote-test-results.xml
      - name: Upload Core Setup test results
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results-3.6
          path: tests/remote-test-results.xml
        if: ${{ always() }}
      - name: Upload Core Setup logs
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results-3.6
          path: ~/.local/share/neon/logs/*.log
        if: ${{ always() }}
#  dev_local:
#    strategy:
#      matrix:
#        python-version: [ 3.6, 3.8 ]
#    runs-on: ubuntu-latest
#    timeout-minutes: 15
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up python ${{ matrix.python-version }}
#        uses: actions/setup-python@v2
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Setup Core
#        run: |
#          bash test/setup_dev_local.sh ${NEON_TOKEN}
#        env:
#          NEON_TOKEN: ${{secrets.neon_token}}
#      - name: Test Core Setup
#        run: |
#          . test/.venv/bin/activate
#          pip install pytest pytest-timeout
#          pytest test/test_setup_dev_local.py --junitxml=tests/dev_local-setup-results.xml
#          pytest test/test_setup_first_run.py --junitxml=tests/dev_local-test-results.xml
#      - name: Upload Core Setup test results
#        uses: actions/upload-artifact@v2
#        with:
#          name: pytest-results-3.6
#          path: tests/dev_local-test-results.xml
#        if: ${{ always() }}
